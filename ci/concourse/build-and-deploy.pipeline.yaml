---
resource_types:
  - name: kubernetes
    type: docker-image
    source:
      repository: zlabjp/kubernetes-resource
      tag: "1.17"
  - name: helm
    type: docker-image
    source:
      repository: typositoire/concourse-helm3-resource

resources:
  - name: git
    type: git
    icon: github
    source:
      uri: https://github.com/vbrunsch/rankings
  - name: docker
    type: docker-image
    icon: docker
    source:
      repository: vis-docker-registry:5000/visualizations
      insecure_registries: ["vis-docker-registry:5000"]
      tag_as_latest: true
  - name: kubectl
    type: kubernetes
    icon: kubernetes
    source:
      server: https://kubernetes:443
      namespace: default
      certificate_authority: ((cluster-auth.certificate-authority-data))
      token: ((cluster-auth.token))
  - name: helm
    type: helm
    icon: ship-wheel
    source:
      cluster_url: https://kubernetes:443
      namespace: default
      cluster_ca: ((cluster-auth.certificate-authority-data))
      token: ((cluster-auth.token))

jobs:
  - name: set-pipeline  # TODO: move to separate repository
    plan:
      - get: git
        trigger: true
      - set_pipeline: build-and-deploy
        file: git/ci/concourse/build-and-deploy.pipeline.yaml

  - name: build-image
    plan:
      - get: git
        passed: [set-pipeline]
        trigger: true
      - put: prune-system
        resource: kubectl
        params:
          kubectl: >
            apply -f git/ci/concourse/prune-host-docker-system.job.yaml
          wait_until_ready: 300
      - put: prune-registry
        resource: kubectl
        params:
          kubectl: >
            exec -it $(kubectl get pods -l app=docker-registry -o custom-columns=:metadata.name)
            --
            /bin/registry garbage-collect /etc/docker/registry/config.yml --delete-untagged
          wait_until_ready: 300
      - put: docker
        params:
          build: git
        get_params: {skip_download: true}

  - name: deploy
    plan:
      - get: git
        passed: [build-image]
        trigger: true
      - put: upgrade-deployments
        resource: helm
        params:
          chart: git/ci/helm/visualizations/
          values: git/ci/helm/visualizations/values.yaml
          release: visualizations
      - put: restart-deployments
        resource: kubectl
        params:
          kubectl: >
            rollout restart deployment
            $(kubectl get deployment -l app.kubernetes.io/name=visualizations -o custom-columns=:metadata.name)
          wait_until_ready: 300
